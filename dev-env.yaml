version: "3"
services:

  nginx:
    image: nginx:1.20
    container_name: nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    environment:
      - NGINX_PORT=80
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:19.0.3
    container_name: keycloak
    hostname: keycloak
    restart: always
    volumes:
      - ./keycloak/keywind/theme/keywind:/opt/keycloak/themes/keywind
      - ./keycloak/weixin/keycloak-services-social-weixin-0.1.1.jar:/opt/keycloak/providers/keycloak-services-social-weixin-0.1.1.jar
      - ./keycloak/weixin/realm-identity-provider-weixin.html:/opt/keycloak/themes/base/admin/resources/partials/realm-identity-provider-weixin.html
      - ./keycloak/weixin/realm-identity-provider-weixin-ext.html:/opt/keycloak/themes/base/admin/resources/partials/realm-identity-provider-weixin-ext.html
    ports:
      - 8080:8080
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=password
      - PROXY_ADDRESS_FORWARDING=true
      - KC_FEATURES=DOCKER,ADMIN_FINE_GRAINED_AUTHZ,TOKEN_EXCHANGE,SCRIPTS
      - KC_PROXY=edge
      - KC_HTTP_RELATIVE_PATH=/auth
      - KC_HOSTNAME_STRICT=false
    command: [
      --spi-login-protocol-openid-connect-legacy-logout-redirect-uri=true,
      start-dev
    ]
    entrypoint: [ "/opt/keycloak/bin/kc.sh" ]

  # Minio
  minio:
    image: minio/minio:RELEASE.2022-08-13T21-54-44Z
    container_name: minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    command: server --console-address :9001 /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.2
    container_name: elasticsearch
    restart: always
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch/plugins:/usr/share/elasticsearch/plugins
    environment:
      - ELASTIC_PASSWORD=password
      - ES_JAVA_OPTS=-Xms2g -Xmx2g

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.2
    container_name: kibana
    restart: always
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - elasticsearch
    links:
      - elasticsearch:elasticsearch
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=password

  # Prometheus
  prometheus:
    image: prom/prometheus:v2.28.0
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.external-url=/prometheus
      - --web.route-prefix=/prometheus
      - --storage.tsdb.retention.time=720h
      - --web.enable-lifecycle
    ports:
      - 9090:9090
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Grafana
  grafana:
    image: grafana/grafana:8.1.2
    container_name: grafana
    restart: always
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    ports:
      - 3000:3000
    user: "0"
    environment:
      GF_LIVE_ALLOWED_ORIGINS: "*"
      GF_AUTH_BASIC_ENABLED: 'true'
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: password
      GF_AUTH_ANONYMOUS_ENABLED: 'true'
      GF_SECURITY_ALLOW_EMBEDDING: 'true'
      GF_SERVER_ROOT_URL: '%(protocol)s://%(domain)s:%(http_port)s/grafana/'
      GF_SERVER_SERVE_FROM_SUB_PATH: 'true'

  # Node-exporter
  node-exporter:
    image: quay.io/prometheus/node-exporter:v1.2.2
    container_name: node-exporter
    hostname: myna
    restart: always
    volumes:
      - /:/host:ro
    command:
      - --path.rootfs=/host
    ports:
      - 9100:9100

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
          gateway: 172.30.0.1
    name: myna
